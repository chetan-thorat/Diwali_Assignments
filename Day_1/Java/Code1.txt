import java.io.*;
import java.util.*;

// Custom Exception
class LowAttendanceException extends Exception {
    public LowAttendanceException(String msg) {
        super(msg);
    }
}

// Student class
class Student implements Serializable {
    int rollno;
    String sname;
    String course;
    double attendance_percentage;
    double score;

    // Default Constructor
    public Student() {}

    // Parameterized Constructor
    public Student(int rollno, String sname, String course, double attendance_percentage, double score) {
        this.rollno = rollno;
        this.sname = sname;
        this.course = course;
        this.attendance_percentage = attendance_percentage;
        this.score = score;
    }

    // Method to calculate grade
    public String calculateGrade() throws LowAttendanceException {
        if (attendance_percentage < 60)
            throw new LowAttendanceException(sname + " has low attendance: " + attendance_percentage + "%");

        if (score >= 90) return "A+";
        else if (score >= 80) return "A";
        else if (score >= 70) return "B";
        else if (score >= 60) return "C";
        else return "D";
    }

    @Override
    public String toString() {
        return rollno + " - " + sname + " - " + course + " - Attendance: " + attendance_percentage + "% - Score: " + score;
    }
}

public class Main {
    public static void main(String[] args) {
        List<Student> students = new ArrayList<>();

        // Adding 10 students
        students.add(new Student(1, "Neha", "Java", 92, 88));
        students.add(new Student(2, "Amit", "Python", 55, 76));
        students.add(new Student(3, "Chetan", "Java", 68, 91));
        students.add(new Student(4, "Namrata", "C++", 72, 85));
        students.add(new Student(5, "Abhishek", "AI", 47, 80));
        students.add(new Student(6, "Sneha", "ML", 88, 95));
        students.add(new Student(7, "Karan", "DS", 64, 73));
        students.add(new Student(8, "Riya", "Python", 79, 82));
        students.add(new Student(9, "Jay", "C", 95, 89));
        students.add(new Student(10, "Tina", "AI", 58, 90));

        // Serialization
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("students.dat"))) {
            oos.writeObject(students);
            System.out.println("‚úÖ Students serialized successfully!");
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Decreasing order of attendance
        students.sort((a, b) -> Double.compare(b.attendance_percentage, a.attendance_percentage));

        System.out.println("\nüìã Students (Descending Attendance):");
        for (Student s : students) {
            System.out.println(s);
            try {
                System.out.println("Grade: " + s.calculateGrade());
            } catch (LowAttendanceException e) {
                System.out.println("‚ö†Ô∏è " + e.getMessage());
            }
        }
    }
}